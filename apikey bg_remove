from flask import Flask, request, send_file, jsonify
from flask_cors import CORS
from rembg import remove
from PIL import Image
import io
from datetime import datetime, timedelta

app = Flask(__name__)
CORS(app)

# In-memory storage for API keys and usage
API_KEYS = {
    'user1': {'api_key': 'api_key_1', 'call_request_no': 0, 'last_request_time': None},
    'user2': {'api_key': 'api_key_2', 'call_request_no': 0, 'last_request_time': None},
    # Add more users and their keys
}

def verify_api_key(request):
    api_key = request.headers.get('X-API-Key')
    for user, data in API_KEYS.items():
        if data['api_key'] == api_key:
            return user, data
    return None, None

@app.route('/remove-bg', methods=['POST'])
def remove_bg():
    user, user_data = verify_api_key(request)
    
    if user_data is None:
        return jsonify({'error': 'Unauthorized access, invalid API key'}), 401

    # Check the last request time and limit requests to one every 10 seconds
    current_time = datetime.now()
    if user_data['last_request_time']:
        time_since_last_request = current_time - user_data['last_request_time']
        if time_since_last_request < timedelta(seconds=10):
            return jsonify({'error': 'Too many requests. Please wait before making another request.'}), 429

    # Update request count and last request time
    user_data['call_request_no'] += 1
    user_data['last_request_time'] = current_time

    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400

    file = request.files['file']
    if not file or file.filename == '':
        return jsonify({'error': 'No selected file'}), 400

    try:
        img = Image.open(file.stream)
    except IOError:
        return jsonify({'error': 'Invalid image file'}), 400

    output = remove(img)
    img_io = io.BytesIO()
    output.save(img_io, format='PNG')
    img_io.seek(0)

    return send_file(img_io, mimetype='image/png', as_attachment=True, download_name='processed_image.png')

@app.route('/add-user', methods=['POST'])
def add_user():
    data = request.json
    username = data.get('username')
    api_key = data.get('api_key')

    if not username or not api_key:
        return jsonify({'error': 'Username and API key are required'}), 400

    API_KEYS[username] = {'api_key': api_key, 'call_request_no': 0, 'last_request_time': None}
    return jsonify({'message': 'User added successfully'}), 201

if __name__ == '__main__':
    app.run(debug=True)
